using System.Collections;
using System.Collections.Generic;
using UnityEngine;

[CreateAssetMenu]
public class Card : ScriptableObject
{
        public CardSprite Sprite;
	    public int CardID;
	    public int DeckID;
		public string CardName;
	    public string Quest;
	    public string LeftChoice;
	    public string RightChoice;
	//下面可以用矩zhen;
	    public int ImpaonEconomyLeft;  
	    public int ImpaonPoliticsLeft;
	    public int ImpaonEpidemicLeft;
	    public int ImpaonCitizensLeft;
	    public int ImpaonEconomyRight;  
	    public int ImpaonPoliticsRight;
	    public int ImpaonEpidemicRight;
	    public int ImpaonCitizensRight;
	//to calculate the chance that a card is likely to appear.not gonna do during Demo. 
	    public int CardWeight;


		//move left choice
		public void Left(){
		//after choice, calculate the impact  on four factors.
		GameManagerScript.Economy = ImpaonEconomyLeft;
		GameManagerScript.Epidemic = ImpaonEpidemicLeft;
		GameManagerScript.Politics = ImpaonPoliticsLeft;
		GameManagerScript.Citizens = ImpaonCitizensLeft;
		Debug.Log (CardName + "choose left");
		}
		//move right choice
		public void Right(){
		GameManagerScript.Economy = ImpaonEconomyRight;
		GameManagerScript.Epidemic = ImpaonEpidemicRight;
		GameManagerScript.Politics = ImpaonPoliticsRight;
		GameManagerScript.Citizens = ImpaonCitizensRight;
			Debug.Log (CardName + "choose Right");
		}

}






GameManager

using System.Collections;
using System.Collections.Generic;
using TMPro;
using UnityEngine;

public class GameManagerScript : MonoBehaviour {
	//gameobject
	public GameObject cardGameObject;
	public SpriteRenderer cardSpriteRenderer;
	public ResourceManager ResourceManager;
	public CardController mainCardController;
	//variables
	public float fMovingSpeed;
	public float fSideMargin;
	public float fSideTrigger;
	public int dividevalue;
	public Vector2 defaultPositionCard;
	Vector3 pos;
	//UI
	public TMP_Text Choice;
	float alphaText;
	public Color textColor;
	public TMP_Text CharacterName;
	public TMP_Text Quest;

	//card variables
	private string LeftChoice;
	private string RightChoice;
	private string Questline;
	public Card currentCard;
	public Card testCard;

	//Game Variables
	public static int Economy;
	public static int Epidemic;
	public static int Politics;
	public static int Citizens;
	public int MaxValue = 100;
	public int MinValue = 0;
	// Use this for initialization
	void Start () {
		CardLoader (testCard);
		
	}

	//for the choice UI
	void UpdateChoice(){
		Choice.color = textColor;
		Quest.text = Questline;
		if (cardGameObject.transform.position.x > 0) {
			
			Choice.text = RightChoice;
		} else {
			Choice.text = LeftChoice;
		}
	}
	
	// Update is called once per frame
	void Update () {
		
		textColor.a = Mathf.Min ((Mathf.Abs (cardGameObject.transform.position.x)-fSideMargin)/dividevalue, 1);
		//choosing Logic Handling
		if (cardGameObject.transform.position.x > fSideTrigger) {
			textColor.a = Mathf.Min (Mathf.Abs (cardGameObject.transform.position.x/dividevalue), 1);
			if (Input.GetMouseButtonUp (0)) {
				currentCard.Right ();
				NewCard ();
			}
		} else if (cardGameObject.transform.position.x > fSideMargin) {
			textColor.a = Mathf.Min (Mathf.Abs (cardGameObject.transform.position.x/dividevalue), 1);


		} else if (cardGameObject.transform.position.x > -fSideMargin) {
			textColor.a = 0;

			
		} else if (cardGameObject.transform.position.x > -fSideTrigger) {
			textColor.a = Mathf.Min (Mathf.Abs (cardGameObject.transform.position.x/dividevalue), 1);
		
		} else {
			if (Input.GetMouseButtonUp (0)) {
				currentCard.Left ();
				NewCard ();
			}
		}
		UpdateChoice ();
		//the moving part
		if (Input.GetMouseButton (0) && mainCardController.isMouseOver) 
		{
			Vector2 pos = Camera.main.ScreenToWorldPoint (Input.mousePosition);
			cardGameObject.transform.position = pos;
		} 
		else 
		{
			cardGameObject.transform.position = Vector2.MoveTowards (cardGameObject.transform.position, defaultPositionCard, fMovingSpeed);
		}

      }

	public void CardLoader(Card card){
		cardSpriteRenderer.sprite = ResourceManager.Sprites [(int)card.Sprite];
		LeftChoice = card.LeftChoice;
		RightChoice = card.RightChoice;
		Questline = card.Quest;
		currentCard = card;

}
	public void NewCard(){
		int rollDice = Random.Range (0, ResourceManager.Cards.Length );
		CardLoader(ResourceManager.Cards[rollDice]);
			}


}


CardController

using UnityEngine;

public class CardController : MonoBehaviour {

	BoxCollider2D thisCard;
	public Card card;
	public bool isMouseOver;
	// Use this for initialization
	private void Start () 
	{
		thisCard = gameObject.GetComponent<BoxCollider2D> ();
	}

	private void OnMouseOver()
	{
		isMouseOver = true;
	}
	private void OnMouseExit()
	{
		isMouseOver = false;
	}

}
public enum CardSprite
{
	woman1,
	woman2
}


